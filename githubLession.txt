***可参考网址***
1、github部署安装教程：http://www.runoob.com/w3cnote/git-guide.html
2、github的分支操作：https://www.cnblogs.com/51kata/p/5965791.html

#####个人理解######
（1）github有分支概念，每一个操作提交/更新都针对于分支而言。如已经merge后的代码可以从master下获取，如下
	git branch   //查看所有分支	
	git checkout master	//切换分支
	git pull	//获取更新
（2）很奇怪的是，某晚提交分支想merge时按钮无法点，第二天进去看出现merge按钮。待研究

1、登录/注册账号：https://github.com/

2、创建仓库：Create a New Repository

3、下载 git，选择完路径一路下一步

4、在本地创建ssh key（这样就不用用户名密码验证了）：
	$ ssh-keygen -t rsa -C "your_email@youremail.com"
   your_email@youremail.com改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key。（ctrl+a全选复制）
   *****默认路径：C:\Users\gzc\.ssh\

5、回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。

6、验证是否ssh成功，在git bash下输入
	$ ssh -T git@github.com
   如果是第一次的会提示是否continue，输入yes就会看到：You've successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。

7、接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。
	$ git config --global user.name "your name"
	$ git config --global user.email "your_email@youremail.com"

8、进入要上传的仓库，右键git bash，添加远程地址：
	$ git remote add origin git@github.com:yourName/yourRepo.git
   后面的yourName和yourRepo表示你再github的用户名和刚才新建的仓库，远程地址选择ssh方式

9、拉取项目：
	git bash here
	$ git init
	$ git config --global user.name "Your Name"
	$ git config --global user.email "email@example.com"
	$ git clone https://github.com/Rainno/vue-es6-webPack.git 
(推荐ssh方式)
	$ git clone git@github.com:guzicheng90/HelloWorld.git

10、新提交项目：
	git bash here
	$ git init
	$ git add readme.txt 或 $ git add .
	$ git config --global user.email "email@example.com"
	$ git commit -m "first commit" 
	$ git remote add origin git@github.com:guzicheng90/HelloWorld.git
	$ git push -u origin master

	***以下是官方给出提交例子***
	echo "# HelloWorld" >> README.md
	git init
	git add README.md
	git commit -m "first commit"
	git remote add origin git@github.com:guzicheng90/HelloWorld.git
	git push -u origin master

11、修改完成后更新提交
	在自己本地 git clone 这个项目，修改bug
	#git clone https://github.com/beepony/bootstrap.git
	#cd bootstrap
	#git checkout -b test-pr
	#git add . && git commit -m "test-pr"
	#git push origin test-pr
    *****完成修改之后，回到官网项目，找到 test-pr 分支，点击旁边绿色的 Compare & pull request 按钮，添加对bug的注释信息，确认提交


12、删除Repository
进入需要删除的Repository，点击Settings标签，找到delete this Repository

13、团队协作git操作流程：
       13-1、克隆一个全新的项目，完成新功能并且提交：
	1、git clone XXX //克隆代码库
	2、git checkout -b test //新建分支
	3、modify some files //完成修改
	4、git add . //把修改加入stage中
	5、git commit -m '' //提交修改到test分支
	6、review代码
	7、git checkout master //切换到master分支
	8、git pull //更新代码
	9、git checkout test //切换到test分支
	10、git meger master //把master分支的代码merge到test分支
	11、git push origin 分支名//把test分支的代码push到远程库
       13-2、目前正在test分支上面开发某个功能，但是没有完成。突然一个紧急的bug需要处理
	1、git add .
	2、git stash
	3、git checkout bugFixBranch
	4、git pull --rebase origin master
	5、fix the bug
	6、git add .
	7、git commit -m ''
	8、git push
	9、git checkout test
	10、git stash pop
	11、continue new feature's development
